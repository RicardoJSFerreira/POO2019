#BlueJ class context
comment0.target=Cliente
comment0.text=\n\ Classe\ que\ \u00C3\u00A9\ subclasse\ de\ User,\ e\ que\ guarda\ a\ informa\u00C3\u00A7\u00C3\u00A3o\ espec\u00C3\u00ADfica\ ao\ cliente.\n\ O\ Cliente\ tem\ posi\u00C3\u00A7\u00C3\u00A3o\ e\ classifica\u00C3\u00A7\u00C3\u00A3o.\n
comment1.params=
comment1.target=Cliente()
comment1.text=\n\ Construtor\ por\ omiss\u00C3\u00A3o\ de\ Cliente.\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ M\u00C3\u00A9todo\ que\ devolve\ a\ representa\u00C3\u00A7\u00C3\u00A3o\ em\ String\ de\ Cliente.\n\ @return\ String\ de\ Cliente.\n
comment11.params=
comment11.target=Cliente\ clone()
comment11.text=\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ de\ clonagem\ de\ um\ Cliente.\n\ @return\ Objeto\ do\ tipo\ Cliente.\n
comment2.params=idUser\ email\ nome\ password\ morada\ dataNascimento\ newPosX\ newPosY\ classificacao
comment2.target=Cliente(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.time.LocalDate,\ java.lang.Double,\ java.lang.Double,\ int)
comment2.text=\n\ Construtor\ parametrizado\ de\ Cliente.\n
comment3.params=idUser\ email\ nome\ password\ morada\ dataNascimento\ newPosX\ newPosY
comment3.target=Cliente(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.time.LocalDate,\ java.lang.Double,\ java.lang.Double)
comment4.params=umCliente
comment4.target=Cliente(Cliente)
comment4.text=\n\ Construtor\ de\ c\u00C3\u00B3pia\ de\ Cliente.\n\ Aceita\ como\ par\u00C3\u00A2metro\ outro\ Cliente\ e\ utiliza\ os\ m\u00C3\u00A9todos\ de\ acesso\ aos\ valores\ das\ vari\u00C3\u00A1veis\ de\ inst\u00C3\u00A2ncia.\n
comment5.params=
comment5.target=Ponto\ getPosicao()
comment5.text=\n\ Devolve\ a\ posi\u00C3\u00A7\u00C3\u00A3o\ do\ Cliente\ em\ posicao.\n\ @return\ posi\u00C3\u00A7\u00C3\u00A3o\ do\ Cliente.\n
comment6.params=posicao
comment6.target=void\ setPosicao(Ponto)
comment6.text=\n\ Atualiza\ a\ posicao\ do\ Cliente\ em\ posicao.\n\ @param\ posicao\ Nova\ posi\u00C3\u00A7\u00C3\u00A3o\ do\ Cliente.\n
comment7.params=
comment7.target=int\ getClassificacao()
comment7.text=\n\ Devolve\ a\ classifica\u00C3\u00A7\u00C3\u00A3o\ do\ Cliente\ em\ classificacao.\n\ @return\ classifica\u00C3\u00A7\u00C3\u00A3o\ do\ Cliente.\n
comment8.params=classificacao
comment8.target=void\ setClassificacao(int)
comment8.text=\n\ Atualiza\ a\ classifica\u00C3\u00A7\u00C3\u00A3o\ do\ Cliente\ em\ classificacao.\n\ @param\ classificacao\ Nova\ classifica\u00C3\u00A7\u00C3\u00A3o\ do\ Cliente.\n
comment9.params=o
comment9.target=boolean\ equals(java.lang.Object)
comment9.text=\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ de\ igualdade\ entre\ dois\ Cliente.\n\ Redifini\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ equals\ de\ Object.\n\ @param\ o\ O\ Cliente\ que\ \u00C3\u00A9\ comparado\ com\ o\ recetor.\n\ @return\ Booleano\ true\ ou\ false.\n
numComments=12
