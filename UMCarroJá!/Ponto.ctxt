#BlueJ class context
comment0.target=Ponto
comment0.text=\n\ Classe\ gen\u00C3\u00A9rica\ que\ representa\ um\ ponto.\n\ Pode\ ser\ instanciada\ com\ valores\ de\ qualquer\ tipo\ que\n\ herde\ to\ tipo\ Number.\ Todos\ os\ valores\ s\u00C3\u00A3o\ convertidos\ para\ double,\n\ ap\u00C3\u00B3s\ calculos.\ \n
comment1.params=x\ y
comment1.target=Ponto(java.lang.Number,\ java.lang.Number)
comment1.text=\n\ Construtor\ principal\ para\ objetos\ da\ classe\ Ponto\n
comment10.params=o
comment10.target=boolean\ equals(java.lang.Object)
comment10.text=\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ de\ igualdade\ entre\ dois\ Ponto.\n\ Redifini\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ equals\ de\ Object.\n\ @param\ o\ O\ Ponto\ que\ \u00C3\u00A9\ comparado\ com\ o\ recetor.\n\ @return\ Booleano\ true\ ou\ false.\n
comment11.params=
comment11.target=Ponto\ clone()
comment11.text=\n\ Implementa\u00C3\u00A7\u00C3\u00A3o\ do\ m\u00C3\u00A9todo\ de\ clonagem\ de\ um\ Ponto.\n\ @return\ Objeto\ do\ tipo\ Ponto.\n
comment2.params=p
comment2.target=Ponto(Ponto)
comment2.text=\n\ Construtor\ de\ c\u00C3\u00B3pia\ de\ Ponto.\n\ Aceita\ como\ par\u00C3\u00A2metro\ outro\ Ponto\ e\ utiliza\ os\ m\u00C3\u00A9todos\ de\ acesso\ aos\ valores\ das\ vari\u00C3\u00A1veis\ de\ inst\u00C3\u00A2ncia.\n
comment3.params=
comment3.target=Ponto()
comment3.text=\n\ Construtor\ por\ omiss\u00C3\u00A3o\ de\ User.\n
comment4.params=
comment4.target=java.lang.Number\ getX()
comment4.text=\n\ Retorna\ a\ coordenada\ X\ do\ ponto\n\n\ @return\ \ \ \ \ A\ coordenada\ x\n
comment5.params=
comment5.target=java.lang.Number\ getY()
comment5.text=\n\ Retorna\ a\ coordenada\ Y\ do\ ponto\n\n\ @return\ \ \ \ \ A\ coordenada\ y\n
comment6.params=x
comment6.target=void\ setX(java.lang.Number)
comment6.text=\n\ Define\ a\ coordenada\ X\ do\ ponto\n\n\ @return\ \ \ \ A\ coordenada\ x\n
comment7.params=y
comment7.target=void\ setY(java.lang.Number)
comment7.text=\n\ Define\ a\ coordenada\ Y\ do\ ponto\n\n\ @return\ \ \ \ A\ coordenada\ y\n
comment8.params=b
comment8.target=double\ distanceTo(Ponto)
comment8.text=\n\ Retorna\ a\ dist\u00C3\u00A2ncia\ deste\ ponto\ para\ outro.\n\ O\ valor\ double\ dos\ dois\ pontos\ s\u00C3\u00A3o\ usados\ no\ c\u00C3\u00A1lculo.\n\n\ @param\ \ b\ \ \ Ponto\ para\ o\ qual\ se\ calcula\ a\ dist\u00C3\u00A2ncia\n\ @return\ \ \ \ \ A\ dist\u00C3\u00A2ncia\ entre\ este\ ponto\ e\ o\ b\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ M\u00C3\u00A9todo\ que\ devolve\ a\ representa\u00C3\u00A7\u00C3\u00A3o\ em\ String\ de\ Ponto\n\ @return\ String\ de\ Ponto.\n
numComments=12
